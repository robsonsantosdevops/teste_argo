apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    field.cattle.io/publicEndpoints: '[{"addresses":[""],"port":443,"protocol":"HTTPS","serviceName":"keycloak:keycloak","ingressName":"keycloak:keycloak","hostname":"keycloak.aws.newbusinessdev.local","path":"/","allNodes":false}]'
    meta.helm.sh/release-name: keycloak
    meta.helm.sh/release-namespace: keycloak
  creationTimestamp: "2022-04-21T00:02:38Z"
  generation: 5
  labels:
    app.kubernetes.io/component: keycloak
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: keycloak
    helm.sh/chart: keycloak-7.1.15
  name: keycloak
  namespace: keycloak
  resourceVersion: "188117553"
  uid: 19823725-c540-4928-bce5-769027909fb0
spec:
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: keycloak
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/name: keycloak
  serviceName: keycloak-headless
  template:
    metadata:
      annotations:
        checksum/configmap-env-vars: 9d360b85a9edc707ccd4501de53adb7808d384e7a98aad6d06109e90c3136370
        checksum/secrets: 7fd6f069b94f8f478a5a8bd4ab954ac932fb04e8543994c5d71093622d476fcd
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: keycloak
        app.kubernetes.io/instance: keycloak
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: keycloak
        helm.sh/chart: keycloak-7.1.15
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: keycloak
                  app.kubernetes.io/name: keycloak
              namespaces:
              - keycloak
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: BITNAMI_DEBUG
          value: "false"
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: admin-password
              name: keycloak
        - name: KEYCLOAK_MANAGEMENT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: management-password
              name: keycloak
        - name: KEYCLOAK_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: keycloak-postgresql
        - name: KEYCLOAK_IMPORT
          value: /realm/realm-config.json
        - name: JAVA_OPTS
          value: -Djgroups.dns.query=keycloak-headless -Dkeycloak.import=/realm/realm-config.json
        envFrom:
        - configMapRef:
            name: keycloak-env-vars
        image: docker.io/bitnami/keycloak:16.1.1-debian-10-r82
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /auth/
            port: http
            scheme: HTTP
          initialDelaySeconds: 300
          periodSeconds: 1
          successThreshold: 1
          timeoutSeconds: 5
        name: keycloak
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8443
          name: https
          protocol: TCP
        - containerPort: 9990
          name: http-management
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /auth/realms/master
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /realm/
          name: realm-secret
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001
      serviceAccount: keycloak
      serviceAccountName: keycloak
      terminationGracePeriodSeconds: 30
      volumes:
      - name: realm-secret
        secret:
          defaultMode: 420
          secretName: realm-secret
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
status:
  availableReplicas: 1
  collisionCount: 0
  currentReplicas: 1
  currentRevision: keycloak-8689f97699
  observedGeneration: 5
  readyReplicas: 1
  replicas: 1
  updateRevision: keycloak-8689f97699
  updatedReplicas: 1
